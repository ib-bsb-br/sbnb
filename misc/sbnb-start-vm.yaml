---

- hosts: "{{ lookup('ansible.builtin.env', 'SBNB_HOSTS') }}"
  gather_facts: false
  ignore_unreachable: true

  tasks:
    - ping:

    - name: Initialize an empty arguments list
      set_fact:
        args: ""

    - name: Download VM start script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/sbnb-io/sbnb/refs/heads/main/scripts/sbnb-start-vm.sh
        dest: /dev/shm/sbnb-start-vm.sh
        mode: u+x

    - name: If VM json config exist
      local_action: stat path=sbnb-example-vm.json
      register: file

    - name: Copy VM config if it exists
      copy: src=sbnb-example-vm.json dest=/dev/shm/sbnb-example-vm.json
      when: file.stat.exists

    - name: Set args
      set_fact:
        args: "{{ args + '-f /dev/shm/sbnb-example-vm.json' }}"
      when: file.stat.exists

    - name: Start VM using qemu container
      docker_container:
        name: sbnb-start-vm
        image: sbnb/svsm
        pull: always
        privileged: true
        network_mode: host
        # state: absent
        devices:
          - /dev/kvm:/dev/kvm
          - /dev/sev:/dev/sev
        volumes:
          - /sys:/sys
          - /dev:/dev
          - /dev/shm:/dev/shm
          - /mnt/sbnb-data:/mnt/sbnb-data
          - /dev/shm/sbnb-start-vm.sh:/dev/shm/sbnb-start-vm.sh
        env:
          SBNB_VM_TSKEY: "{{ lookup('ansible.builtin.env', 'SBNB_VM_TSKEY') }}"
          SBNB_VM_VCPU: "{{ lookup('ansible.builtin.env', 'SBNB_VM_VCPU') }}"
          SBNB_VM_MEM: "{{ lookup('ansible.builtin.env', 'SBNB_VM_MEM') }}"
          SBNB_VM_IMAGE_SIZE: "{{ lookup('ansible.builtin.env', 'SBNB_VM_IMAGE_SIZE') }}"
          SBNB_VM_ATTACH_GPUS: "{{ lookup('ansible.builtin.env', 'SBNB_VM_ATTACH_GPUS') }}"
          ATTACH_PCIE_DEVICES: "{{ lookup('ansible.builtin.env', 'ATTACH_PCIE_DEVICES') }}"
          CONFIDENTIAL_COMPUTING: "{{ lookup('ansible.builtin.env', 'CONFIDENTIAL_COMPUTING') }}"
          HOSTNAME: "{{ lookup('ansible.builtin.env', 'HOSTNAME') }}"

        command: /dev/shm/sbnb-start-vm.sh {{ args }}
